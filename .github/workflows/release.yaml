name: "release"
run-name: "Release from commit ${{ github.sha }}"

on:
  push:
    branches: ["master"]
    # If only BUILD, CHANGELOG and README were modified, it means that was the release
    # Sane implementation would require creating steps specifically to extract tags
    # (something that is not needed atm).
    paths-ignore:
      - "MODULE.bazel"
      - "CHANGELOG.md"
      - "README.md"
      - "docs/README.md"
      - "examples/MODULE.bazel"
# Author soapbox:
# GitHub actions do not honor combination of branches and tags-ignore as logical AND
# statement - instead, it treats it as an OR requirements. This is counter-intuitive
# and unhelpful behavior, but it is what it is.
# Fortunately, combination of branches and path results in logical AND.
# Therefore, the solution below will not work
#    tags-ignore:
#      # Don't run for releases
#      - 'v*'

jobs:
  release:
    name: "release"
    # Note: Using bubblwrap on 24.04 requires some work!
    runs-on: ["ubuntu-24.04"]
    defaults:
      run:
        shell: nix-shell ./non-nixos-shell.nix --run "set -eo pipefail; source {0}"
 
    steps:
      - name: "Install nix"
        uses: cachix/install-nix-action@v31
        # with:
          # This should not be here
          # as it introduces the possibility of someone
          # loading the wrong dependency by accident.
          # However, lack of this entry,
          # makes the github action log output have
          # warnings regarding this, which makes
          # debuging harder if someone does not know 
          # it can be ignored. 
          # nix_path: nixpkgs=channel:nixos-unstable

      - name: "Checkout 'master' branch of the repo"
        uses: actions/checkout@v4
        with:
          clean: true
          fetch-depth: 0
          fetch-tags: true
          # This is important, we do not do merges
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ secrets.gh_pat }}

      - name: "Set git users for release commit"
        run: |2
          git config user.name "Github Actions"
          git config user.email "actions@github.com"

      - name: "Auto-release"
        run: |2
          cog bump --auto --annotated 'automated release'

      - name: "Push changes"
        run: |2
          if [ $(git rev-list HEAD...origin/master --ignore-submodules --count) -eq 0 ]; then
            echo "No commits to be pushed."
            exit 0
          fi

          # We are pushing the changes only if there are commits to be pushed
          git push
          git push --tags
