name: "publish"
run-name: "Publish changes for commit ${{ github.sha }}"

on:
  push:
    branches: ["master"]
    # If changelog was modified, it means that was the release
    # Sane implementation would require creating steps specifically to extract tags
    # (something that is not needed atm).
    paths:
      - "CHANGELOG.md"
# Author soapbox:
# GitHub actions do not honor combination of branches and tags as logical AND
# statement - instead, it treats it as an OR requirements. This is counter-intuitive
# and unhelpful behavior, but it is what it is.
# Fortunately, combination of branches and path results in logical AND.
# Therefore, the solution below will not work
#    tags:
#      # Run only for releases
#      - 'v*'

jobs:
  prepare:
    name: "prepare"
    # Note: Using bubblwrap on 24.04 requires some work!
    runs-on: ["ubuntu-24.04"]
    outputs:
      version: ${{ steps.gen_files_to_publish.outputs.version }}

    steps:
      - name: "Install nix"
        uses: cachix/install-nix-action@v31
        # with:
          # This should not be here
          # as it introduces the possibility of someone
          # loading the wrong dependency by accident.
          # However, lack of this entry,
          # makes the github action log output have
          # warnings regarding this, which makes
          # debuging harder if someone does not know 
          # it can be ignored. 
          # nix_path: nixpkgs=channel:nixos-unstable    steps:

      - name: "Checkout 'master' branch of the repo"
        uses: actions/checkout@v4
        with:
          clean: true
          fetch-depth: 0
          fetch-tags: true
          # This is important, we do not do merges
          ref: ${{ github.event.pull_request.head.sha }}

      - name: "Generate files to be published"
        id: gen_files_to_publish
        shell: bash
        run: |2
          outs="$(./scripts/gen-release-artifacts.bash)"
          export outs
          echo "outs=${outs}" >> "$GITHUB_OUTPUT"
          version="$(cat "${outs}/version")"
          export version
          echo "version=${version}" >> "$GITHUB_OUTPUT"

      # Ensure that the uploaded files are flatten in structure (they do not contain path to tmp..)
      - name: "Flatten dirs of generates files"
        shell: bash
        run: |2
          mkdir ./dist
          cp ${{ steps.gen_files_to_publish.outputs.outs}}/rules_cc_hdrs_map-${{ steps.gen_files_to_publish.outputs.version }}.tar.gz ./dist/rules_cc_hdrs_map-${{ steps.gen_files_to_publish.outputs.version }}.tar.gz
          cp ${{ steps.gen_files_to_publish.outputs.outs}}/release_notes.md ./dist/release_notes.md

      # Upload generated artifacts, so that bazel-contrib/.github workflow release_ruleset can use them
      - uses: actions/upload-artifact@v4
        with:
          name: go-binaries
          path: |2
            ./dist/rules_cc_hdrs_map-${{ steps.gen_files_to_publish.outputs.version }}.tar.gz
            ./dist/release_notes.md
          retention-days: 1

  release:
    name: "publish"
    needs: "prepare"
    uses: bazel-contrib/.github/.github/workflows/release_ruleset.yaml@v7.2.3
    with:
      draft: false
      mount_bazel_caches: false
      prerelease: false
      release_files: |2
        ./dist/*
      tag_name: ${{ needs.prepare.outputs.version }}
