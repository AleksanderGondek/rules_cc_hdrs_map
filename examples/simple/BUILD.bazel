""" Simple examples. """

load("@rules_cc_header_maps//cc:bin.bzl", "cc_bin_with_header_maps")
load("@rules_cc//cc:defs.bzl", "cc_binary")

cc_bin_with_header_maps(
    name = "hello-world",
    srcs = ["hello-world.cpp"],
)

cc_bin_with_header_maps(
    name = "main",
    srcs = [
        "main.cpp"
    ],
    deps = [
        "//tolkien:headers",
        "@boost//:math",
    ],
    header_maps = {
        "tolkien/reuel/ronald/john/include/riddle-one.hpp": ["riddle-one.hpp"],
        "tolkien/reuel/ronald/john/include/riddle-two.hpp": ["arbitrary-name/riddle-two.hpp"],
        "tolkien/reuel/ronald/john/include/riddle-three.hpp": ["a/b/c/d/e/f/g/riddle-three.hpp"],
        "tolkien/reuel/ronald/john/include/riddle-four.hpp": ["simple/riddle-four.hpp"],
    }
)

cc_binary(
    name = "vanilla-boost",
    srcs = [
        "vanilla-boost.cpp",
    ],
    deps = [
        "@boost//:lambda",
        # Curious: rules_boost seem not to propagade dependencies
        # between rules, which makes us explicitly, manually list
        # deps of @boost//:lambda
        "@boost//:core",
        "@boost//:is_placeholder",
        "@boost//:tuple",
        "@boost//:type_traits",
        "@boost//:iterator",
    ]
)